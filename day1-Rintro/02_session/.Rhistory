x = "Beak Length (mm)",  # Label for x-axis
y = "Beak Depth (mm)",    # Label for y-axis
colour = "Species"        # Legend title
) +
theme(
plot.title = element_text(size = 14, face = "bold"),  # Title font size and style
axis.title.x = element_text(size = 12),  # X-axis title font size
axis.title.y = element_text(size = 12),  # Y-axis title font size
axis.text = element_text(size = 10),  # Axis text font size
legend.title = element_text(size = 12),  # Legend title font size
legend.text = element_text(size = 10)  # Legend text font size
)
# plot a very production-ready figure (let's not be too finnicky at this point)
ggplot(finch_data, aes(x = Beak_length.mm, y = Beak_depth.mm, colour = species)) +
geom_point() +  # Add points for each observation
theme_classic(base_size = 10) +  # Use a classic theme for a clean look
labs(
x = "Beak Length (mm)",  # Label for x-axis
y = "Beak Depth (mm)",    # Label for y-axis
colour = "Species"        # Legend title
) +
theme(
plot.title = element_text(size = 14, face = "bold"),  # Title font size and style
axis.title.x = element_text(size = 12),  # X-axis title font size
axis.title.y = element_text(size = 12),  # Y-axis title font size
axis.text = element_text(size = 10),  # Axis text font size
legend.title = element_text(size = 12),  # Legend title font size
legend.text = element_text(size = 10)  # Legend text font size
)
# plot a very production-ready figure (let's not be too finnicky at this point)
ggplot(finch_data, aes(x = Beak_length.mm, y = Beak_depth.mm, colour = species)) +
geom_point() +  # Add points for each observation
theme_classic(base_size = 14) +  # Use a classic theme for a clean look
labs(
x = "Beak Length (mm)",  # Label for x-axis
y = "Beak Depth (mm)",    # Label for y-axis
colour = "Species"        # Legend title
) +
theme(
plot.title = element_text(size = 14, face = "bold"),  # Title font size and style
axis.title.x = element_text(size = 12),  # X-axis title font size
axis.title.y = element_text(size = 12),  # Y-axis title font size
axis.text = element_text(size = 10),  # Axis text font size
legend.title = element_text(size = 12),  # Legend title font size
legend.text = element_text(size = 10)  # Legend text font size
)
# plot a very production-ready figure (let's not be too finnicky at this point)
ggplot(finch_data, aes(x = Beak_length.mm, y = Beak_depth.mm, colour = species)) +
geom_point() +  # Add points for each observation
theme_classic(base_size = 20) +  # Use a classic theme for a clean look
labs(
x = "Beak Length (mm)",  # Label for x-axis
y = "Beak Depth (mm)",    # Label for y-axis
colour = "Species"        # Legend title
) +
theme(
plot.title = element_text(size = 14, face = "bold"),  # Title font size and style
axis.title.x = element_text(size = 12),  # X-axis title font size
axis.title.y = element_text(size = 12),  # Y-axis title font size
axis.text = element_text(size = 10),  # Axis text font size
legend.title = element_text(size = 12),  # Legend title font size
legend.text = element_text(size = 10)  # Legend text font size
)
# plot a very production-ready figure (let's not be too finnicky at this point)
ggplot(finch_data, aes(x = Beak_length.mm, y = Beak_depth.mm, colour = species)) +
geom_point() +  # Add points for each observation
theme_classic(base_size = 25) +  # Use a classic theme for a clean look
labs(
x = "Beak Length (mm)",  # Label for x-axis
y = "Beak Depth (mm)",    # Label for y-axis
colour = "Species"        # Legend title
) +
theme(
plot.title = element_text(size = 14, face = "bold"),  # Title font size and style
axis.title.x = element_text(size = 12),  # X-axis title font size
axis.title.y = element_text(size = 12),  # Y-axis title font size
axis.text = element_text(size = 10),  # Axis text font size
legend.title = element_text(size = 12),  # Legend title font size
legend.text = element_text(size = 10)  # Legend text font size
)
# plot a very production-ready figure (let's not be too finnicky at this point)
ggplot(finch_data, aes(x = Beak_length.mm, y = Beak_depth.mm, colour = species)) +
geom_point() +  # Add points for each observation
theme_classic(base_size = 12) +  # Use a classic theme for a clean look
labs(
x = "Beak Length (mm)",  # Label for x-axis
y = "Beak Depth (mm)",    # Label for y-axis
colour = "Species"        # Legend title
) +
theme(
plot.title = element_text(size = 14, face = "bold"),  # Title font size and style
axis.title.x = element_text(size = 12),  # X-axis title font size
axis.title.y = element_text(size = 12),  # Y-axis title font size
axis.text = element_text(size = 10),  # Axis text font size
legend.title = element_text(size = 12),  # Legend title font size
legend.text = element_text(size = 10)  # Legend text font size
)
# plot a very production-ready figure (let's not be too finnicky at this point)
# let's introduce a pt_size variable to change the size of everything
ggplot(finch_data, aes(x = Beak_length.mm, y = Beak_depth.mm, colour = species)) +
geom_point() +  # Add points for each observation
theme_classic(base_size = 12) +  # Use a classic theme for a clean look
labs(
x = "Beak Length (mm)",  # Label for x-axis
y = "Beak Depth (mm)",    # Label for y-axis
colour = "Species"        # Legend title
) +
theme(
#axis.title.x = element_text(size = 12),  # X-axis title font size
#axis.title.y = element_text(size = 12),  # Y-axis title font size
#axis.text = element_text(size = 10),  # Axis text font size
#legend.title = element_text(size = 12),  # Legend title font size
#legend.text = element_text(size = 10)  # Legend text font size
)
# plot a very production-ready figure (let's not be too finnicky at this point)
ggplot(finch_data, aes(x = Beak_length.mm, y = Beak_depth.mm, colour = species)) +
geom_point() +  # Add points for each observation
theme_classic(base_size = 14) +  # Use a classic theme for a clean look
labs(
x = "Beak Length (mm)",  # Label for x-axis
y = "Beak Depth (mm)",    # Label for y-axis
colour = "Species"        # Legend title
) +
theme(
#axis.title.x = element_text(size = 12),  # X-axis title font size
#axis.title.y = element_text(size = 12),  # Y-axis title font size
#axis.text = element_text(size = 10),  # Axis text font size
#legend.title = element_text(size = 12),  # Legend title font size
#legend.text = element_text(size = 10)  # Legend text font size
)
# plot a very production-ready figure (let's not be too finnicky at this point)
ggplot(finch_data, aes(x = Beak_length.mm, y = Beak_depth.mm, colour = species)) +
geom_point() +  # Add points for each observation
theme_classic(base_size = 14) +  # Use a classic theme for a clean look
labs(
x = "Beak Length (mm)",  # Label for x-axis
y = "Beak Depth (mm)",    # Label for y-axis
colour = "Species"        # Legend title
) +
theme(
# We can also change the size of individual elements by uncommenting this
#axis.title.x = element_text(size = 12),  # X-axis title font size
#axis.title.y = element_text(size = 12),  # Y-axis title font size
#axis.text = element_text(size = 10),  # Axis text font size
#legend.title = element_text(size = 12),  # Legend title font size
#legend.text = element_text(size = 10)  # Legend text font size
)
# plot a very production-ready figure (let's not be too finnicky at this point)
ggplot(finch_data, aes(x = Beak_length.mm, y = Beak_depth.mm, colour = species)) +
geom_point() +  # Add points for each observation
theme_classic(base_size = 14) +  # Use a classic theme for a clean look
labs(
x = "Beak Length (mm)",  # Label for x-axis
y = "Beak Depth (mm)",    # Label for y-axis
colour = "Species"        # Legend title
) +
theme(
# change the size of individual elements by uncommenting this if you want
#axis.title.x = element_text(size = 12),  # X-axis title font size
#axis.title.y = element_text(size = 12),  # Y-axis title font size
#axis.text = element_text(size = 10),  # Axis text font size
#legend.title = element_text(size = 12),  # Legend title font size
#legend.text = element_text(size = 10)  # Legend text font size
)
# save a png file
ggsave("images/finch_data_hr.png", dpi=600, height=342, width=219, units="px")
# save a pdf
ggsave("images/finch_data_hr.pdf", device="pdf",dpi=600)
342/219
3.5*1.56
# save a png file
ggsave("images/finch_data_hr.png", dpi=600, height=5.46, width=3.5, units="in")
# save a png file
ggsave("images/finch_data_hr.png", height=5.46, width=3.5, units="in")
219/342
3.5*0.64
# save a png file
ggsave("images/finch_data_hr.png", height=2.24, width=3.5, units="in")
# save a png file
ggsave("images/finch_data_hr.png", dpi = 600, height=219, width=342, units="px")
# save a png file
ggsave("images/finch_data_hr.png",height=219, width=342, units="px")
# save a png file
ggsave("images/finch_data_hr.png",dpi=600,height=3, width=3.5, units="px")
# save a png file
ggsave("images/finch_data_hr.png",dpi=600,height=3, width=3.5, units="in")
# save a png file
ggsave("images/finch_data_hr.png",dpi=600,height=2.23, width=3.5, units="in")
# save a png file
ggsave("figures/finch_data_hr.png",dpi=300,height=2.23, width=3.5, units="in")
# save a png file
ggsave("figures/finch_data_hr.png",dpi=300,height=2.23, width=3.5, units="in")
# save a png file
ggsave("figures/finch_data_hr.png",dpi=300,height=2.23, width=3.5, units="in")
```{r eval=FALSE, include=FALSE}
# plot a very production-ready figure (let's not be too finnicky at this point)
ggplot(finch_data, aes(x = Beak_length.mm, y = Beak_depth.mm, colour = species)) +
geom_point() +  # Add points for each observation
theme_classic(base_size = 12) +  # Use a classic theme for a clean look
labs(
x = "Beak Length (mm)",  # Label for x-axis
y = "Beak Depth (mm)",    # Label for y-axis
colour = "Species"        # Legend title
) +
theme(
# change the size of individual elements by uncommenting this if you want
#axis.title.x = element_text(size = 12),  # X-axis title font size
#axis.title.y = element_text(size = 12),  # Y-axis title font size
#axis.text = element_text(size = 10),  # Axis text font size
#legend.title = element_text(size = 12),  # Legend title font size
#legend.text = element_text(size = 10)  # Legend text font size
)
# save a png file
ggsave("figures/finch_data_hr.png",dpi=300,height=2.23, width=3.5, units="in")
# plot a very production-ready figure (let's not be too finnicky at this point)
ggplot(finch_data, aes(x = Beak_length.mm, y = Beak_depth.mm, colour = species)) +
geom_point() +  # Add points for each observation
theme_classic(base_size = 10) +  # Use a classic theme for a clean look
labs(
x = "Beak Length (mm)",  # Label for x-axis
y = "Beak Depth (mm)",    # Label for y-axis
colour = "Species"        # Legend title
) +
theme(
# change the size of individual elements by uncommenting this if you want
#axis.title.x = element_text(size = 12),  # X-axis title font size
#axis.title.y = element_text(size = 12),  # Y-axis title font size
#axis.text = element_text(size = 10),  # Axis text font size
#legend.title = element_text(size = 12),  # Legend title font size
#legend.text = element_text(size = 10)  # Legend text font size
)
# save a png file
ggsave("figures/finch_data_hr.png",dpi=300,height=2.23, width=3.5, units="in")
# plot a very production-ready figure (let's not be too finnicky at this point)
ggplot(finch_data, aes(x = Beak_length.mm, y = Beak_depth.mm, colour = species)) +
geom_point() +  # Add points for each observation
theme_classic(base_size = 8) +  # Use a classic theme for a clean look
labs(
x = "Beak Length (mm)",  # Label for x-axis
y = "Beak Depth (mm)",    # Label for y-axis
colour = "Species"        # Legend title
) +
theme(
# change the size of individual elements by uncommenting this if you want
#axis.title.x = element_text(size = 12),  # X-axis title font size
#axis.title.y = element_text(size = 12),  # Y-axis title font size
#axis.text = element_text(size = 10),  # Axis text font size
#legend.title = element_text(size = 12),  # Legend title font size
#legend.text = element_text(size = 10)  # Legend text font size
)
# save a png file
ggsave("figures/finch_data_hr.png",dpi=300,height=2.23, width=3.5, units="in")
# save a png file
ggsave("figures/finch_data_hr.png",dpi=600,height=2.23, width=3.5, units="in")
# plot a production-ready figure (let's not be too finicky at this point)
ggplot(finch_data, aes(x = Beak_length.mm, y = Beak_depth.mm, colour = species)) +
geom_point(size=1) +  # Add points for each observation
theme_classic(base_size = 10) +  # Use a classic theme for a clean look
labs(
x = "Beak Length (mm)",  # Label for x-axis
y = "Beak Depth (mm)",    # Label for y-axis
colour = "Species"        # Legend title
) +
theme(
# change the size of individual elements by uncommenting this if you want
#axis.title.x = element_text(size = 12),  # X-axis title font size
#axis.title.y = element_text(size = 12),  # Y-axis title font size
#axis.text = element_text(size = 10),  # Axis text font size
#legend.title = element_text(size = 12),  # Legend title font size
#legend.text = element_text(size = 10)  # Legend text font size
)
# save a png file
ggsave("figures/finch_data_hr.png",dpi=600, height=2.23, width=3.5, units="in")
# plot a production-ready figure (let's not be too finicky at this point)
ggplot(finch_data, aes(x = Beak_length.mm, y = Beak_depth.mm, colour = species)) +
geom_point(size=1) +  # Add points for each observation
theme_classic(base_size = 10) +  # Use a classic theme for a clean look
labs(
x = "Beak Length (mm)",  # Label for x-axis
y = "Beak Depth (mm)",    # Label for y-axis
colour = "Species"        # Legend title
) +
theme(
# change the size of individual elements by uncommenting this if you want
#axis.title.x = element_text(size = 12),  # X-axis title font size
#axis.title.y = element_text(size = 12),  # Y-axis title font size
#axis.text = element_text(size = 10),  # Axis text font size
#legend.title = element_text(size = 12),  # Legend title font size
#legend.text = element_text(size = 10)  # Legend text font size
)
# save a png file
ggsave("figures/finch_data_hr.png",dpi=600, height=2.23, width=3.5, units="in")
# plot a production-ready figure (let's not be too finicky at this point)
ggplot(finch_data, aes(x = Beak_length.mm, y = Beak_depth.mm, colour = species)) +
geom_point(size=0.5) +  # Add points for each observation
theme_classic(base_size = 10) +  # Use a classic theme for a clean look
labs(
x = "Beak Length (mm)",  # Label for x-axis
y = "Beak Depth (mm)",    # Label for y-axis
colour = "Species"        # Legend title
) +
theme(
# change the size of individual elements by uncommenting this if you want
#axis.title.x = element_text(size = 12),  # X-axis title font size
#axis.title.y = element_text(size = 12),  # Y-axis title font size
#axis.text = element_text(size = 10),  # Axis text font size
#legend.title = element_text(size = 12),  # Legend title font size
#legend.text = element_text(size = 10)  # Legend text font size
)
# save a png file
ggsave("figures/finch_data_hr.png",dpi=600, height=2.23, width=3.5, units="in")
# plot a production-ready figure (let's not be too finicky at this point)
ggplot(finch_data, aes(x = Beak_length.mm, y = Beak_depth.mm, colour = species)) +
geom_point(size=0.5) +  # Add points for each observation
theme_classic(base_size = 10) +  # Use a classic theme for a clean look
labs(
x = "Beak Length (mm)",  # Label for x-axis
y = "Beak Depth (mm)",    # Label for y-axis
colour = "Species"        # Legend title
) +
theme(
# change the size of individual elements by uncommenting this if you want
#axis.title.x = element_text(size = 12),  # X-axis title font size
#axis.title.y = element_text(size = 12),  # Y-axis title font size
#axis.text = element_text(size = 10),  # Axis text font size
#legend.title = element_text(size = 12),  # Legend title font size
#legend.text = element_text(size = 10)  # Legend text font size
)
# Fill the blank
# Specify the size in pixels for the height and width (as determined above)
# save a png file
ggsave("figures/finch_data_hr.png",dpi=600, height=2.23, width=3.5, units="in")
# note you are not getting exactly what you are seeing on the preview, when it comes to dot size
# open and zoom on the figure with the Files tab
# see the difference with different values of dpi
# adjust the size of dots and base_size to optimal values
# save a pdf
ggsave("figures/finch_data_hr.pdf", device="pdf",dpi=600, height=5.46, width, 3.5)
# plot a production-ready figure (let's not be too finicky at this point)
ggplot(finch_data, aes(x = Beak_length.mm, y = Beak_depth.mm, colour = species)) +
geom_point(size=1) +  # Add points for each observation
theme_classic(base_size = 10) +  # Use a classic theme for a clean look
labs(
x = "Beak Length (mm)",  # Label for x-axis
y = "Beak Depth (mm)",    # Label for y-axis
colour = "Species"        # Legend title
) +
theme(
# change the size of individual elements by uncommenting this if you want
#axis.title.x = element_text(size = 12),  # X-axis title font size
#axis.title.y = element_text(size = 12),  # Y-axis title font size
#axis.text = element_text(size = 10),  # Axis text font size
#legend.title = element_text(size = 12),  # Legend title font size
#legend.text = element_text(size = 10)  # Legend text font size
)
# Fill the blank
# Specify the size in pixels for the height and width (as determined above)
# save a png file
ggsave("figures/finch_data_hr.png",dpi=600, height=2.23, width=3.5, units="in")
# note you are not getting exactly what you are seeing on the preview, when it comes to dot size
# open and zoom on the figure with the Files tab
# see the difference with different values of dpi
# adjust the size of dots and base_size to optimal values
# save a pdf
ggsave("figures/finch_data_hr.pdf", device="pdf",dpi=600, height=5.46, width, 3.5)
3.5 / 1.4 = 2.5
3.5 / 1.4
ggthemes
library(ggthemes)
install.packages("ggthemes")
library(ggthemes)
# Example plot with colorblind-friendly palette
ggplot(mpg, aes(x = displ, y = hwy, colour = class)) +
geom_point() +
scale_colour_colorblind() +  # Apply colorblind-friendly palette
theme_minimal() +
labs(title = "Fuel Efficiency by Engine Displacement",
x = "Engine Displacement (L)",
y = "Highway Miles per Gallon")
# Example plot with colorblind-friendly palette
ggplot(finch_data, aes(x = displ, y = hwy, colour = class)) +
geom_point() +
scale_colour_colorblind() +  # Apply colorblind-friendly palette
theme_minimal() +
labs(title = "Fuel Efficiency by Engine Displacement",
x = "Engine Displacement (L)",
y = "Highway Miles per Gallon")
# plot a production-ready figure (let's not be too finicky at this point)
ggplot(finch_data, aes(x = Beak_length.mm, y = Beak_depth.mm, colour = species)) +
geom_point(size=1) +
# Example plot with colorblind-friendly palette
ggplot(finch_data, aes(x = displ, y = hwy, colour = class)) +
geom_point() +
scale_colour_colorblind() +  # Apply colorblind-friendly palette
theme_minimal() +
labs(title = "Fuel Efficiency by Engine Displacement",
x = "Engine Displacement (L)",
y = "Highway Miles per Gallon")
# plot a production-ready figure (let's not be too finicky at this point)
ggplot(finch_data, aes(x = Beak_length.mm, y = Beak_depth.mm, colour = species)) +
geom_point(size=1) +
# plot a production-ready figure (let's not be too finicky at this point)
ggplot(finch_data, aes(x = Beak_length.mm, y = Beak_depth.mm, colour = species)) +
geom_point(size=1)
# plot a production-ready figure (let's not be too finicky at this point)
ggplot(finch_data, aes(x = Beak_length.mm, y = Beak_depth.mm, colour = species)) +
geom_point(size=1)
# plot a production-ready figure (let's not be too finicky at this point)
ggplot(finch_data, aes(x = Beak_length.mm, y = Beak_depth.mm, colour = species)) +
geom_point()
ggplot(finch_data, aes(x = Beak_length.mm, y = Beak_depth.mm, colour = species)) +
geom_point()
scale_colour_colorblind()  # Apply colorblind-friendly palette
ggplot(finch_data, aes(x = Beak_length.mm, y = Beak_depth.mm, colour = species)) +
geom_point()+
scale_colour_colorblind()  # Apply colorblind-friendly palette
?scale_colour_colorblind()
ggplot(finch_data, aes(x = Beak_length.mm, y = Beak_depth.mm, colour = species)) +
geom_point()+
scale_colour_colorblind()  # Apply colorblind-friendly palette
ggplot(finch_data, aes(x = Beak_length.mm, y = Beak_depth.mm, colour = species)) +
geom_point()+
scale_colour_colorblind()+  # Apply colorblind-friendly palette
them_classic()
# We need the package ggthemes exptending ggplot capabilities
install.packages("ggthemes")
library(ggthemes)
ggplot(finch_data, aes(x = Beak_length.mm, y = Beak_depth.mm, colour = species)) +
geom_point()+
scale_colour_colorblind()+  # Apply colorblind-friendly palette
theme_classic()
# We now have a plot where differences are defined by brightness and color!
# We have the problem, however that the contrast of the orange dots is not very good
# fix with adding the theme_classic()
ggplot(finch_data, aes(x = Beak_length.mm, y = Beak_depth.mm, colour = species)) +
geom_point(size=2)+
scale_colour_colorblind()+  # Apply colorblind-friendly palette
theme_classic()
ggplot(finch_data, aes(x = Beak_length.mm, y = Beak_depth.mm, colour = species)) +
geom_point()
# let's simulate what colour blind people see
cvdPlot(h)
# let's assign the plot to a handle "h"
h<-ggplot(finch_data, aes(x = Beak_length.mm, y = Beak_depth.mm, colour = species)) +
geom_point()
# let's simulate what colour blind people see
cvdPlot(h)
install.packages("colourBlindness")
library(colourBlindness)
# let's assign the plot to a handle "h"
h<-ggplot(finch_data, aes(x = Beak_length.mm, y = Beak_depth.mm, colour = species)) +
geom_point()
install.packages("colourBlindness")
clear
setwd("D:/GitHub/ReproScience")
getwd()
# we are telling R to source (run) the file that is one folder up with ".."
source("Pre_Package_Install.R")
getwd()
# we are telling R to source (run) the file that is one folder up with ".."
source("../../Pre_Package_Install.R")
# Load necessary libraries and set the working directory to the correct session number
library(tidyverse)
setwd("./data/02_session")
getwd()
# Load necessary libraries and set the working directory to the correct session number
library(tidyverse)
setwd("./day1/02_session")
setwd("./day01/02_session")
setwd("./day1/02_session")
setwd("./day1R-intro/02_session")
setwd("./day1-Rintro/02_session")
setwd("./day1-Rintro/")
setwd("./day1-Rintro/")
getwd()
setwd("D:/GitHub/ReproScience")
setwd("./day1-Rintro/02_session")
getwd()
setwd("./day1-Rintro/02_session/")
setwd("./day1-Rintro/02_session/")
setwd("D:/GitHub/ReproScience")
setwd("./day1-Rintro/02_session/")
getwd()
setwd("./day1-Rintro/02_session/")
setwd("D:/GitHub/ReproScience")
setwd("./day1-Rintro/02_session/")
# load the .csv data (using base R)
tt_data <- read.csv("./day1-Rintro/02_session/data/tiktok_data.csv")
setwd()
getwd()
tt_data <- read.csv("./day1-Rintro\02_session\data/tiktok_data.csv")
d
tt_data <- read.csv("./day1-Rintro/02_session/data/tiktok_data.csv")
tt_data
# load the .csv data (using base R)
tt_data <- read.csv("./day1-Rintro/02_session/data/tiktok_data.csv")
# Load necessary libraries and set the working directory to the correct session number
library(tidyverse)
tt_data <- read.csv("./data/tiktok_data.csv")
getwd()
tt_data
setwd("D:/GitHub/ReproScience/day1-Rintro/02_session")
tt_data <- read.csv("./data/tiktok_data.csv")
tt_data
getwd()
# Load the dataset from the URL: letter frequency in the english language
url <- "https://people.sc.fsu.edu/~jburkardt/data/csv/letter_frequency.csv"
freq_data <- read.csv(url)
?write())
?write()
?load()
plot(data$x, data$y, main = paste("Plot", i), xlab = "X", ylab = "Y", pch = 19, col = "blue")
